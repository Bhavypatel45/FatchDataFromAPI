import 'package:flutter/material.dart';

import 'API/model.dart';
import 'Detail.dart';
import 'package:http/http.dart' as http;
import 'dart:async';
import 'dart:convert';

class homescreen extends StatefulWidget {
  const homescreen({Key? key}) : super(key: key);

  @override
  _homescreenState createState() => _homescreenState();
}

class _homescreenState extends State<homescreen> {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
        title: 'Fetch Data Example',
        theme:  ThemeData(
          primarySwatch: Colors.blue,
        ),
        home: Scaffold(
          appBar: AppBar(
            title:  Text('Fetch Data Example'),
          ),
          body:
          FutureBuilder<Autogenerated>(
            future: fetchUsersFromGitHub(),
            builder: (context, snapshot) {
              print(snapshot.hasData);
              if (snapshot.hasData) {
                return  ListView.builder(
                    itemCount: (snapshot.data)!.results?.length,
                    itemBuilder: (context, index) {
                      return  Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: <Widget>[
                            InkWell(
                              onTap: () {
                                Navigator.push(
                                  context,
                                  MaterialPageRoute(
                                    builder: (context) =>
                                        detail(),
                                  ),
                                );
                              },
                              child: Padding(
                                padding: const EdgeInsets.all(8.0),
                                child:  Text((snapshot.data?.results?[index].name).toString(),
                                    style:  const TextStyle(
                                      fontSize: 20,
                                        fontWeight: FontWeight.bold)),
                              ),
                            ),
                             const Divider()
                          ]
                      );
                    });
              } else if (snapshot.hasError) {
                return  Text("${snapshot.error}");
              }

              // By default, show a loading spinner
              return  const CircularProgressIndicator();
            },
          ),
        ));
  }
}

Future<Autogenerated> fetchUsersFromGitHub() async {
  final url = Uri.parse('https://swapi.dev/api/people');
  final response = await http.get(url);
  print(response.body);
  var responseJson = (json.decode(response.body));
  return Autogenerated.fromJson(responseJson);
}
